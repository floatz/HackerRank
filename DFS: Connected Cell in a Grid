//https://www.hackerrank.com/challenges/ctci-connected-cell-in-a-grid

using namespace std;
void dfs(vector<vector<int>> grid, vector<vector<bool>>& isVisited, int i, int j, int n, int m, int& count){
    if (i <0 || i>n || j<0||j>m) return;
    if (isVisited[i][j] || grid[i][j]==0) return;
    isVisited[i][j] = true;
    count++;
    for (int k =-1;k<2;k++){
        for (int kk = -1; kk<2;kk++){
            if (i+k>=0 && i+k<n && j+kk>=0 && j+kk<m){
                 dfs(grid, isVisited, i+k, j+kk, n, m, count);
            }
        }
    }
}

int get_biggest_region(vector< vector<int> > grid, int n, int m) {
    vector<vector<bool>> isVisited(n, vector<bool>(m,false));
    int count = 0, maxcount = 0;
    for (int i = 0; i<n; i++){
        for (int j=0; j<m; j++){
            dfs(grid, isVisited, i, j,n, m, count);
            if (count>maxcount) maxcount = count;
            count = 0;
        }
    }
    return maxcount;    
}

int main(){
    int n;
    cin >> n;
    int m;
    cin >> m;
    vector< vector<int> > grid(n,vector<int>(m));
    for(int grid_i = 0;grid_i < n;grid_i++){
       for(int grid_j = 0;grid_j < m;grid_j++){
          cin >> grid[grid_i][grid_j];
       }
    }
    cout << get_biggest_region(grid, n, m) << endl;
    return 0;
}
